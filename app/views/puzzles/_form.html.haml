= f.error_messages
= error_messages_for(:user)
.group
  = f.label :title, "Title *", :class => "label"
  = f.text_field :title, :class => "text_field"
  / .description
  /   = current_group.question_prompt

/ .group
/   = f.label :tags, "#{t(:tags, :scope => "activerecord.attributes.question")}", :class => "label"
/   = f.text_field :tags, :value => @puzzle.tags.join(", "), :class => "text_field autocomplete_for_tags"
/   .description
/     = t(".tags_tip")

/ .group
/   %label.label#rqlabel
/     Related Puzzles
/   %ul.items#related_questions

.group
  = f.label :description, "Puzzle *", :class => "label"
  / -if current_group.wysiwyg_editor
  = f.text_area :description, :class => "text_area markdown_editor", :id => "markdown_editor", :value => markdown(@puzzle.description)
  / -else
  / = f.text_area :body, :class => "text_area", :id => "markdown_editor"
  / 
  #markdown_preview.markdown
    =markdown(@puzzle.description)
/ 
/ -if current_group.language.nil? && AppConfig.enable_i18n
/   .group
/     = f.label :language, t(:language, :scope => "activerecord.attributes.question"), :class => "label"
/     = language_select(f, @puzzle)
/     .description
/       = t(".language_tip")
/ -else
/   = f.hidden_field :language, :value => (current_group.language || AppConfig.default_language)
/ 
/ -if current_group.has_adult_content
/   .group
/     = f.check_box :adult_content, :class => "checkbox"
/     = f.label :adult_content, t(".adult_content"), :class => "radio"

/ -if !@puzzle.new?
/   .group
/     = f.label :version_message, t("wiki.model.attributes.message"), :class => "label"
/     = f.text_field :version_message, :class => "text_field"
/ / -elsif !logged_in?
/ /   = render :partial => "users/anonymous_form"
